image: node:alpine

before_script:
  - apk update && apk add --no-cache zip jq

build-module:
  stage: build
  script:
    - export MODULE_NAME=$(node -p -e "require('./module.json').name")
    - export MANIFEST="$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_REF_SLUG/raw/module.json?job=build-module"
    - export DOWNLOAD="$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_REF_SLUG/raw/$MODULE_NAME.zip?job=build-module"
    - echo "Building $MODULE_NAME"
    - mkdir $MODULE_NAME
    - 'cp main.js template.html $MODULE_NAME'
    - '[[ -e src ]] && cp -r src $MODULE_NAME'
    - '[[ -e scripts ]] && cp -r scripts $MODULE_NAME'
    - '[[ -e styles ]] && cp -r styles $MODULE_NAME'
    - '[[ -e templates ]] && cp -r templates $MODULE_NAME'
    - '[[ -e lang ]] && cp -r lang $MODULE_NAME'
    - '[[ -e packs ]] && cp -r packs $MODULE_NAME'
    - 'jq --arg manifest "$MANIFEST" --arg download "$DOWNLOAD" ''. + { "manifest": $manifest, "download": $download}'' < module.json > $MODULE_NAME/module.json'
    - echo "Building $MODULE_NAME module ZIP file"
    - cp $MODULE_NAME/module.json module.json
    - zip -r $MODULE_NAME.zip $MODULE_NAME
  artifacts:
    paths:
      - '*.zip'
      - module.json
  only:
    refs:
      - develop
      - master
